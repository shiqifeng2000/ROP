"use strict";var controllerModule=angular.module("application.controllers",["rop.services","ngDragDrop"]);controllerModule.controller("FrameCtrl",["$rootScope","$scope","$stateParams",function($rootScope,$scope,$stateParams){$rootScope.validateEntry().then(function(){$scope.src=$stateParams.src})}]).controller("ErrorCtrl",["$rootScope","$scope","$stateParams",function($rootScope,$scope,$stateParams){$rootScope.removeLoading(),$scope.error=$stateParams.error}]).controller("MessageCtrl",["$rootScope","$scope",function($rootScope,$scope){if(!$rootScope.checkSession())return void $rootScope.logout();$scope.columns=[{text:"消息内容",name:"msg",style:{width:"auto","text-align":"left",padding:"0px 16px"},compile:'<div ng-bind="$parent.row.msg" ng-click="$parent.$parent.col.goStateViaURL($parent.row.msg_url, $parent.row.params)"></div>',goStateViaURL:$rootScope.goStateViaURL},{text:"添加时间",name:"msg_time",style:{width:"160px","text-align":"center"}}],$scope.noselection=!0;var changeTab=function(){$rootScope.rawSystemHints&&$rootScope.rawSystemHints.length?$scope.tableData=($rootScope.rawSystemHints[$scope.index]||$rootScope.rawSystemHints[0]).pages:($scope.index=0,$scope.tableData=[])};$scope.reset=function(){$scope.refreshing=!0,$rootScope.refreshSystemHints().then(function(){$scope.index=0,$scope.tableData=$rootScope.rawSystemHints&&$rootScope.rawSystemHints[0]&&$rootScope.rawSystemHints[0].pages||[]})["finally"](function(){$scope.refreshing=!1})},$scope.reset(),$scope.changeIndex=function(index){$scope.index=index},$scope.toPage=function(){$rootScope.rawSystemHints&&$rootScope.rawSystemHints.length&&"undefined"!=typeof $scope.index&&$scope.goStateViaURL($rootScope.rawSystemHints[$scope.index].url)},$scope.$watch(function(){return $rootScope.rawSystemHints},changeTab),$scope.$watch(function(){return $scope.index},changeTab),$rootScope.removeLoading(),window.test=$scope}]).controller("APICtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/api"],function(APIController){$injector.invoke(APIController,self,{$scope:$scope}),$scope.$digest()})})}]).controller("DomainCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/domain"],function(DomainController){$injector.invoke(DomainController,self,{$scope:$scope}),$scope.$digest()})})}]).controller("AppCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/app_list"],function(AppListCtrl){$injector.invoke(AppListCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("ISVAppCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/isv_app"],function(ISVAppCtrl){$injector.invoke(ISVAppCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("EnvironmentCtrl",["$rootScope",function($rootScope){$rootScope.validateEntry()}]).controller("EnvironmentAppCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/env_app"],function(EnvironmentCtrl){$injector.invoke(EnvironmentCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("EnvironmentSetCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/env_set"],function(EnvironmentCtrl){$injector.invoke(EnvironmentCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("APIFlowCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/flow"],function(APIFlowCtrl){$injector.invoke(APIFlowCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("APICautionCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/caution"],function(EnvironmentCtrl){$injector.invoke(EnvironmentCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("CategoryCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/category"],function(CategoryCtrl){$injector.invoke(CategoryCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("CategoryGroupCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/category_group"],function(CategoryGroupCtrl){$injector.invoke(CategoryGroupCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("NoApplyCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/no_apply"],function(NoApplyCtrl){$injector.invoke(NoApplyCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("AuthorityCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/authority"],function(AuthorityCtrl){$injector.invoke(AuthorityCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("MailCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/user_mail"],function(MailCtrl){$injector.invoke(MailCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("NotifyCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/notify"],function(NotifyCtrl){$injector.invoke(NotifyCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("PingCtrl",["$rootScope",function($rootScope){$rootScope.validateEntry()}]).controller("SandboxLogAssistCtrl",["$rootScope","$scope","$location","$injector","$q","ModuleLoader",function($rootScope,$scope,$location,$injector,$q,ModuleLoader){var self=void 0;$rootScope.validateEntry().then(function(){$q.when(ModuleLoader.require(["application/controllers/assist_sandbox"]),ModuleLoader.reload("angularCalendar","rop-date-range-picker",$scope)).then(function(result){$injector.invoke(result[0],self,{$scope:$scope})})})}]).controller("LogAssistCtrl",["$rootScope","$scope","$location","$injector","$q","ModuleLoader",function($rootScope,$scope,$location,$injector,$q,ModuleLoader){var self=void 0;$rootScope.validateEntry().then(function(){$q.when(ModuleLoader.require(["application/controllers/assist"]),ModuleLoader.reload("angularCalendar","rop-date-range-picker",$scope)).then(function(result){$injector.invoke(result[0],self,{$scope:$scope})})})}]).controller("SandboxLogAnalysisCtrl",["$rootScope","$scope","$location","$injector","$q","ModuleLoader",function($rootScope,$scope,$location,$injector,$q,ModuleLoader){var self=void 0;$rootScope.validateEntry().then(function(){$q.when(ModuleLoader.require(["application/controllers/analysis_sandbox"]),ModuleLoader.reload("angularCalendar","rop-date-time-range-picker",$scope)).then(function(results){$injector.invoke(results[0],self,{$scope:$scope})})})}]).controller("LogAnalysisCtrl",["$rootScope","$scope","$location","$injector","$q","ModuleLoader",function($rootScope,$scope,$location,$injector,$q,ModuleLoader){var self=void 0;$rootScope.validateEntry().then(function(){$q.when(ModuleLoader.require(["application/controllers/analysis"]),ModuleLoader.reload("angularCalendar","rop-date-time-range-picker",$scope)).then(function(results){$injector.invoke(results[0],self,{$scope:$scope})})})}]).controller("DownloadCtrl",["$rootScope",function($rootScope){$rootScope.validateEntry()}]).controller("DocCtrl",["$rootScope","$scope","$location","$injector","$timeout","ModuleLoader",function($rootScope,$scope,$location,$injector,$timeout,ModuleLoader){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/doc","ckeditor"],function(ctrl){$injector.invoke(ctrl,self,{$scope:$scope}),$scope.$digest(),$timeout(function(){ModuleLoader.reload("angularEditor","rop-editor,[rop-editor]",$scope)},100)})})}]).controller("NoticeCtrl",["$rootScope","$scope","$location","$injector","$timeout","ModuleLoader",function($rootScope,$scope,$location,$injector,$timeout,ModuleLoader){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/notice","ckeditor"],function(ctrl){$injector.invoke(ctrl,self,{$scope:$scope}),$scope.$digest(),$timeout(function(){ModuleLoader.reload("angularEditor","rop-editor,[rop-editor]",$scope)},100)})})}]).controller("ToolDownloadCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/tool_download"],function(ToolDownloadCtrl){$injector.invoke(ToolDownloadCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("SDKCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/sdk"],function(SDKCtrl){$injector.invoke(SDKCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("FunctionCtrl",["$rootScope","$scope","$location","$injector","$q","ModuleLoader",function($rootScope,$scope,$location,$injector,$q,ModuleLoader){var self=void 0;window.CKEDITOR&&(window.CKEDITOR.disableAutoInline=!0),$rootScope.validateEntry().then(function(){ModuleLoader._loader.isLoaded("ngFileUpload")?require(["application/controllers/function","ckeditor"],function(ctrl){$injector.invoke(ctrl,self,{$scope:$scope,ModuleLoader:ModuleLoader})}):$q.all([ModuleLoader.reload("angularFileUpload","[ngf-drop],[ngf-select],[ngf-src]",$scope),ModuleLoader.require(["application/controllers/function","ckeditor"])]).then(function(result){$injector.invoke(result[1][0],self,{$scope:$scope,ModuleLoader:ModuleLoader})})})}]).controller("SubUserCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/subuser"],function(SubUserCtrl){$injector.invoke(SubUserCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("ProductListCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/productlist"],function(APIController){$injector.invoke(APIController,self,{$scope:$scope}),$scope.$digest()})})}]).controller("ProductUserListCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/productionuserlist"],function(ProductUserListCtrl){$injector.invoke(ProductUserListCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("ProductChargeListCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/productionchargelist"],function(ProductChargeListCtrl){$injector.invoke(ProductChargeListCtrl,self,{$scope:$scope}),$scope.$digest()})})}]).controller("DataRoleSetCtrl",["$rootScope","$scope","$location","$injector",function($rootScope,$scope,$location,$injector){var self=void 0;$rootScope.validateEntry().then(function(){require(["application/controllers/dataroleset"],function(DataRoleSetCtrl){$injector.invoke(DataRoleSetCtrl,self,{$scope:$scope}),$scope.$digest()})})}]);