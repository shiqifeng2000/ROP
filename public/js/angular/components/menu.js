"use strict";!function(window,angular,undefined){function MenuController($ropMenu,$attrs,$element,$scope,$mdUtil,$timeout,$rootScope,$q){var menuContainer,triggerElement,self=this;this.nestLevel=parseInt($attrs.mdNestLevel,10)||0,this.init=function(setMenuContainer,opts){opts=opts||{},menuContainer=setMenuContainer,triggerElement=$element[0].querySelector("[ng-click],[ng-mouseenter]"),triggerElement.setAttribute("aria-expanded","false"),this.isInMenuBar=opts.isInMenuBar,this.nestedMenus=$mdUtil.nodesToArray(menuContainer[0].querySelectorAll(".md-nested-menu")),menuContainer.on("$mdInterimElementRemove",function(){self.isOpen=!1});var menuContainerId="menu_container_"+$mdUtil.nextUid();menuContainer.attr("id",menuContainerId),angular.element(triggerElement).attr({"aria-owns":menuContainerId,"aria-haspopup":"true"}),$scope.$on("$destroy",this.disableHoverListener),menuContainer.on("$destroy",function(){$ropMenu.destroy()})};var openMenuTimeout,menuItems,deregisterScopeListeners=[];this.enableHoverListener=function(){deregisterScopeListeners.push($rootScope.$on("$ropMenuOpen",function(event,el){menuContainer[0].contains(el[0])&&(self.currentlyOpenMenu=el.controller("ropMenu"),self.isAlreadyOpening=!1,self.currentlyOpenMenu.registerContainerProxy(self.triggerContainerProxy.bind(self)))})),deregisterScopeListeners.push($rootScope.$on("$ropMenuClose",function(event,el){menuContainer[0].contains(el[0])&&(self.currentlyOpenMenu=undefined)})),menuItems=angular.element($mdUtil.nodesToArray(menuContainer[0].children[0].children)),menuItems.on("mouseenter",self.handleMenuItemHover),menuItems.on("mouseleave",self.handleMenuItemMouseLeave)},this.disableHoverListener=function(){for(;deregisterScopeListeners.length;)deregisterScopeListeners.shift()();menuItems&&menuItems.off("mouseenter",self.handleMenuItemHover),menuItems&&menuItems.off("mouseleave",self.handleMenuMouseLeave)},this.handleMenuItemHover=function(event){if(!self.isAlreadyOpening){var nestedMenu=event.target.querySelector("md-menu")||$mdUtil.getClosest(event.target,"MD-MENU");openMenuTimeout=$timeout(function(){if(nestedMenu&&(nestedMenu=angular.element(nestedMenu).controller("ropMenu")),self.currentlyOpenMenu&&self.currentlyOpenMenu!=nestedMenu){var closeTo=self.nestLevel+1;self.currentlyOpenMenu.close(!0,{closeTo:closeTo}),self.isAlreadyOpening=!0,nestedMenu.open()}else nestedMenu&&!nestedMenu.isOpen&&nestedMenu.open&&(self.isAlreadyOpening=!0,nestedMenu.open())},nestedMenu?100:250);var focusableTarget=event.currentTarget.querySelector(".md-button:not([disabled])");focusableTarget&&focusableTarget.focus()}},this.handleMenuItemMouseLeave=function(){openMenuTimeout&&($timeout.cancel(openMenuTimeout),openMenuTimeout=undefined)},this.open=function(ev){ev&&ev.stopPropagation(),ev&&ev.preventDefault(),self.isOpen||(self.enableHoverListener(),self.isOpen=!0,triggerElement=triggerElement||(ev?ev.target:$element[0]),triggerElement.setAttribute("aria-expanded","true"),$scope.$emit("$ropMenuOpen",$element),$ropMenu.show({scope:$scope,ropMenuCtrl:self,nestLevel:self.nestLevel,element:menuContainer,target:triggerElement,preserveElement:!0,parent:"body",onROPMenuShow:$attrs.onOpen&&"function"==typeof $scope[$attrs.onOpen]&&$scope[$attrs.onOpen]||undefined,onROPMenuRemove:$attrs.onHide&&"function"==typeof $scope[$attrs.onHide]&&$scope[$attrs.onHide]||undefined})["finally"](function(){triggerElement.setAttribute("aria-expanded","false"),self.disableHoverListener()}))},$scope.$ropOpenMenu=this.open,$scope.$watch(function(){return self.isOpen},function(isOpen){isOpen?(menuContainer.attr("aria-hidden","false"),$element[0].classList.add("md-open"),angular.forEach(self.nestedMenus,function(el){el.classList.remove("md-open")})):(menuContainer.attr("aria-hidden","true"),$element[0].classList.remove("md-open")),$scope.$ropMenuIsOpen=self.isOpen}),this.focusMenuContainer=function(){var focusTarget=menuContainer[0].querySelector("[md-menu-focus-target]");focusTarget||(focusTarget=menuContainer[0].querySelector(".md-button")),focusTarget.focus()},this.registerContainerProxy=function(handler){this.containerProxy=handler},this.triggerContainerProxy=function(ev){this.containerProxy&&this.containerProxy(ev)},this.destroy=function(){return self.isOpen?$ropMenu.destroy():$q.when(!1)},this.close=function(skipFocus,closeOpts){if(self.isOpen){self.isOpen=!1;var eventDetails=angular.extend({},closeOpts,{skipFocus:skipFocus});if($scope.$emit("$ropMenuClose",$element,eventDetails),$ropMenu.hide(null,closeOpts),!skipFocus){var el=self.restoreFocusTo||$element.find("button")[0];el instanceof angular.element&&(el=el[0]),el&&el.focus()}}},this.positionMode=function(){var attachment=($attrs.mdPositionMode||"target").split(" ");return 1==attachment.length&&attachment.push(attachment[0]),{left:attachment[0],top:attachment[1]}},this.offsets=function(){var position=($attrs.mdOffset||"0 0").split(" ").map(parseFloat);if(2==position.length)return{left:position[0],top:position[1]};if(1==position.length)return{top:position[0],left:position[0]};throw Error("Invalid offsets specified. Please follow format <x, y> or <n>")}}function MenuDirective($mdUtil){function compile(templateElement){templateElement.addClass("md-menu");var triggerElement=templateElement.children()[0];if(triggerElement.hasAttribute("ng-click")||(triggerElement=triggerElement.querySelector("[ng-click],[ng-mouseenter]")||triggerElement),!triggerElement||"MD-BUTTON"!=triggerElement.nodeName&&"BUTTON"!=triggerElement.nodeName||triggerElement.hasAttribute("type")||triggerElement.setAttribute("type","button"),2!=templateElement.children().length)throw Error(INVALID_PREFIX+"Expected two children elements.");triggerElement&&triggerElement.setAttribute("aria-haspopup","true");var nestedMenus=templateElement[0].querySelectorAll("md-menu"),nestingDepth=parseInt(templateElement[0].getAttribute("md-nest-level"),10)||0;return nestedMenus&&angular.forEach($mdUtil.nodesToArray(nestedMenus),function(menuEl){menuEl.hasAttribute("md-position-mode")||menuEl.setAttribute("md-position-mode","cascade"),menuEl.classList.add("md-nested-menu"),menuEl.setAttribute("md-nest-level",nestingDepth+1)}),link}function link(scope,element,attrs,ctrls){var ropMenuCtrl=ctrls[0],isInMenuBar=ctrls[1]!=undefined,menuContainer=angular.element('<div class="md-open-menu-container md-whiteframe-z2"></div>'),menuContents=element.children()[1];menuContents.hasAttribute("role")||menuContents.setAttribute("role","menu"),menuContainer.append(menuContents),element.on("$destroy",function(){menuContainer.remove()}),element.append(menuContainer),menuContainer[0].style.display="none",ropMenuCtrl.init(menuContainer,{isInMenuBar:isInMenuBar})}var INVALID_PREFIX="Invalid HTML for md-menu: ";return{restrict:"E",require:["ropMenu","?^ropMenuBar"],controller:"ropMenuCtrl",scope:!0,compile:compile}}function MenuProvider($$interimElementProvider){function menuDefaultOptions($mdUtil,$mdTheming,$mdConstant,$document,$window,$q,$$rAF,$animateCss,$animate){function showBackdrop(scope,element,options){return options.nestLevel?angular.noop:(options.disableParentScroll&&!$mdUtil.getClosest(options.target,"MD-DIALOG")?options.restoreScroll=$mdUtil.disableScrollAround(options.element,options.parent):options.disableParentScroll=!1,options.hasBackdrop&&(options.backdrop=$mdUtil.createBackdrop(scope,"md-menu-backdrop md-click-catcher"),$animate.enter(options.backdrop,$document[0].body)),function(){options.backdrop&&options.backdrop.remove(),options.disableParentScroll&&options.restoreScroll()})}function onRemove(scope,element,opts){function animateRemoval(){return $animateCss(element,{addClass:"md-leave"}).start()}function detachAndClean(){element.removeClass("md-active"),detachElement(element,opts),opts.alreadyOpen=!1}return opts.cleanupInteraction(),opts.cleanupResizing(),opts.hideBackdrop(),opts.$destroy===!0?detachAndClean():animateRemoval().then(detachAndClean)["finally"](function(){opts.scope.keyword=null,opts.onROPMenuRemove&&opts.onROPMenuRemove()})}function onShow(scope,element,opts){function showMenu(){return opts.parent.append(element),element[0].style.display="",$q(function(resolve){var position=calculateMenuPosition(element,opts);element.removeClass("md-leave"),$animateCss(element,{addClass:"md-active",from:animator.toCss(position),to:animator.toCss({transform:""})}).start().then(resolve)})}function sanitizeAndConfigure(){if(!opts.target)throw Error("$ropMenu.show() expected a target to animate from in options.target");angular.extend(opts,{alreadyOpen:!1,isRemoved:!1,target:angular.element(opts.target),parent:angular.element(opts.parent),menuContentEl:angular.element(element[0].querySelector("md-menu-content"))})}function startRepositioningOnResize(){var repositionMenu=function(target,options){return $$rAF.throttle(function(){if(!opts.isRemoved){var position=calculateMenuPosition(target,options);target.css(animator.toCss(position))}})}(element,opts);return $window.addEventListener("resize",repositionMenu),$window.addEventListener("orientationchange",repositionMenu),function(){$window.removeEventListener("resize",repositionMenu),$window.removeEventListener("orientationchange",repositionMenu)}}function activateInteraction(){function onMenuKeyDown(ev){var handled;switch(ev.keyCode){case $mdConstant.KEY_CODE.ESCAPE:opts.ropMenuCtrl.close(!1,{closeAll:!0}),handled=!0;break;case $mdConstant.KEY_CODE.ENTER:if("input"==$document[0].activeElement.tagName.toLowerCase()&&(ev.preventDefault(),ev.stopPropagation(),!focusMenuItem(ev,opts.menuContentEl,opts,1)&&!opts.nestLevel)){opts.ropMenuCtrl.triggerContainerProxy(ev),handled=!0;break}handled=!1;break;case $mdConstant.KEY_CODE.UP_ARROW:focusMenuItem(ev,opts.menuContentEl,opts,-1)||opts.nestLevel||opts.ropMenuCtrl.triggerContainerProxy(ev),handled=!0;break;case $mdConstant.KEY_CODE.DOWN_ARROW:focusMenuItem(ev,opts.menuContentEl,opts,1)||opts.nestLevel||opts.ropMenuCtrl.triggerContainerProxy(ev),handled=!0}handled&&(ev.preventDefault(),ev.stopImmediatePropagation())}function onBackdropClick(e){e.preventDefault(),e.stopPropagation(),scope.$apply(function(){opts.ropMenuCtrl.close(!0,{closeAll:!0})})}function captureClickListener(e){function close(){scope.$apply(function(){opts.ropMenuCtrl.close(!0,{closeAll:!0})})}function hasAnyAttribute(target,attrs){if(!target)return!1;for(var attr,i=0;attr=attrs[i];++i)for(var rawAttr,altForms=[attr,"data-"+attr,"x-"+attr],j=0;rawAttr=altForms[j];++j)if(target.hasAttribute(rawAttr))return!0;return!1}var target=e.target;do{if(target==opts.menuContentEl[0])return;if((hasAnyAttribute(target,["ng-click","ng-href","ui-sref"])||"BUTTON"==target.nodeName||"MD-BUTTON"==target.nodeName)&&!hasAnyAttribute(target,["md-prevent-menu-close"])){var closestMenu=$mdUtil.getClosest(target,"MD-MENU");target.hasAttribute("disabled")||closestMenu&&closestMenu!=opts.parent[0]||close();break}}while(target=target.parentNode)}element.addClass("md-clickable"),opts.backdrop&&opts.backdrop.on("click",onBackdropClick),opts.menuContentEl.on("keydown",onMenuKeyDown),opts.menuContentEl[0].addEventListener("click",captureClickListener,!0);var focusTarget=opts.menuContentEl[0].querySelector("[md-menu-focus-target]");if(!focusTarget){var firstChild=opts.menuContentEl[0].firstElementChild;focusTarget=firstChild&&(firstChild.querySelector(".md-button:not([disabled])")||firstChild.querySelector("input")||firstChild.firstElementChild)}return focusTarget&&focusTarget.focus(),function(){element.removeClass("md-clickable"),opts.backdrop&&opts.backdrop.off("click",onBackdropClick),opts.menuContentEl.off("keydown",onMenuKeyDown),opts.menuContentEl[0].removeEventListener("click",captureClickListener,!0)}}return sanitizeAndConfigure(opts),$mdTheming.inherit(opts.menuContentEl,opts.target),opts.cleanupResizing=startRepositioningOnResize(),opts.hideBackdrop=showBackdrop(scope,element,opts),showMenu().then(function(response){return opts.alreadyOpen=!0,opts.cleanupInteraction=activateInteraction(),response})["finally"](function(){opts.onROPMenuShow&&opts.onROPMenuShow()})}function focusMenuItem(e,menuEl,opts,direction){for(var didFocus,currentItem=$mdUtil.getClosest(e.target,"MD-MENU-ITEM"),items=$mdUtil.nodesToArray(menuEl[0].children),currentIndex=items.indexOf(currentItem),i=currentIndex+direction;i>=0&&i<items.length;i+=direction){var focusTarget=items[i].querySelector(".md-button")||items[i].querySelector("input");if(didFocus=attemptFocus(focusTarget))break}return didFocus}function attemptFocus(el){if(el&&el.getAttribute("tabindex")!=-1)return el.focus(),$document[0].activeElement==el}function detachElement(element,opts){opts.preserveElement?toNode(element).style.display="none":toNode(element).parentNode===toNode(opts.parent)&&toNode(opts.parent).removeChild(toNode(element))}function calculateMenuPosition(el,opts){function clamp(pos){pos.top=Math.max(Math.min(pos.top,bounds.bottom-containerNode.offsetHeight),bounds.top),pos.left=Math.max(Math.min(pos.left,bounds.right-containerNode.offsetWidth),bounds.left)}function firstVisibleChild(){for(var i=0;i<openMenuNode.children.length;++i)if("none"!=$window.getComputedStyle(openMenuNode.children[i]).display)return openMenuNode.children[i]}var alignTarget,containerNode=el[0],openMenuNode=el[0].firstElementChild,openMenuNodeRect=openMenuNode.getBoundingClientRect(),boundryNode=$document[0].body,boundryNodeRect=boundryNode.getBoundingClientRect(),menuStyle=$window.getComputedStyle(openMenuNode),originNode=opts.target[0].querySelector("[md-menu-origin]")||opts.target[0],originNodeRect=originNode.getBoundingClientRect(),bounds={left:boundryNodeRect.left+MENU_EDGE_MARGIN,top:Math.max(boundryNodeRect.top,0)+MENU_EDGE_MARGIN,bottom:Math.max(boundryNodeRect.bottom,Math.max(boundryNodeRect.top,0)+boundryNodeRect.height)-MENU_EDGE_MARGIN,right:boundryNodeRect.right-MENU_EDGE_MARGIN},alignTargetRect={top:0,left:0,right:0,bottom:0},existingOffsets={top:0,left:0,right:0,bottom:0},positionMode=opts.ropMenuCtrl.positionMode();"target"!=positionMode.top&&"target"!=positionMode.left&&"target-right"!=positionMode.left||(alignTarget=firstVisibleChild(),alignTarget&&(alignTarget=alignTarget.firstElementChild||alignTarget,alignTarget=alignTarget.querySelector("[md-menu-align-target]")||alignTarget,alignTargetRect=alignTarget.getBoundingClientRect(),existingOffsets={top:parseFloat(containerNode.style.top||0),left:parseFloat(containerNode.style.left||0)}));var position={},transformOrigin="top ";switch(positionMode.top){case"target":position.top=existingOffsets.top+originNodeRect.top-alignTargetRect.top;break;case"cascade":position.top=originNodeRect.top-parseFloat(menuStyle.paddingTop)-originNode.style.top;break;case"bottom":position.top=originNodeRect.top+originNodeRect.height;break;default:throw new Error('Invalid target mode "'+positionMode.top+'" specified for md-menu on Y axis.')}switch(positionMode.left){case"target":position.left=existingOffsets.left+originNodeRect.left-alignTargetRect.left,transformOrigin+="left";break;case"target-right":position.left=originNodeRect.right-openMenuNodeRect.width+(openMenuNodeRect.right-alignTargetRect.right),transformOrigin+="right";break;case"cascade":var willFitRight=originNodeRect.right+openMenuNodeRect.width<bounds.right;position.left=willFitRight?originNodeRect.right-originNode.style.left:originNodeRect.left-originNode.style.left-openMenuNodeRect.width,transformOrigin+=willFitRight?"left":"right";break;case"left":position.left=originNodeRect.left,transformOrigin+="left";break;default:throw new Error('Invalid target mode "'+positionMode.left+'" specified for md-menu on X axis.')}var offsets=opts.ropMenuCtrl.offsets();position.top+=offsets.top,position.left+=offsets.left,clamp(position);var scaleX=Math.round(100*Math.min(originNodeRect.width/containerNode.offsetWidth,1))/100,scaleY=Math.round(100*Math.min(originNodeRect.height/containerNode.offsetHeight,1))/100;return{top:Math.round(position.top),left:Math.round(position.left),transform:opts.alreadyOpen?undefined:$mdUtil.supplant("scale({0},{1})",[scaleX,scaleY]),transformOrigin:transformOrigin}}var animator=$mdUtil.dom.animator;return{parent:"body",onShow:onShow,onRemove:onRemove,hasBackdrop:!0,disableParentScroll:!0,skipCompile:!0,preserveScope:!0,skipHide:!0,themable:!0}}function toNode(el){return el instanceof angular.element&&(el=el[0]),el}var MENU_EDGE_MARGIN=8;return menuDefaultOptions.$inject=["$mdUtil","$mdTheming","$mdConstant","$document","$window","$q","$$rAF","$animateCss","$animate"],$$interimElementProvider("$ropMenu").setDefaults({methods:["target"],options:menuDefaultOptions})}angular.module("rop.material.components.menu",["material.core","material.components.backdrop"]),angular.module("rop.material.components.menu").controller("ropMenuCtrl",MenuController),MenuController.$inject=["$ropMenu","$attrs","$element","$scope","$mdUtil","$timeout","$rootScope","$q"],angular.module("rop.material.components.menu").directive("ropMenu",MenuDirective),MenuDirective.$inject=["$mdUtil"],angular.module("rop.material.components.menu").provider("$ropMenu",MenuProvider),MenuProvider.$inject=["$$interimElementProvider"]}(window,window.angular);