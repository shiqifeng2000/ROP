"use strict";!function(angular){function editorDirective(){return{scope:{options:"="},require:["ngModel","ropEditor"],controller:EditorCtrl,controllerAs:"ctrl",bindToController:!0,template:"",link:function(scope,element,attrs,controllers){var ngModelCtrl=controllers[0],editorCtrl=controllers[1];editorCtrl.configureNgModel(ngModelCtrl)}}}function EditorCtrl($scope,$element,$timeout,$animate,$q){this.$animate=$animate,this.$q=$q,this.$element=$element,this.editorPanel=$element[0].querySelector("textarea"),this.$scope=$scope,this.$timeout=$timeout,this.ngModelCtrl=null,this.readyDeferred=$q.defer();var self=this;if(this.ready=function(){return self.readyDeferred.promise},this.$element.attr("id"))this.id=this.$element.attr("id");else{var id="rop_editor_"+(new Date).getTime();this.$element.attr("id",id),this.id=id}CKEDITOR.instances[this.id]&&(this.instance=CKEDITOR.instances[this.id]),$scope.$watch(function(){return self.options},function(a){self.instance&&self.instance.destroy(),CKEDITOR.instances[self.id]&&CKEDITOR.instances[self.id].destroy(),self.$element[0]&&self.$element[0].hasAttribute("rop-editor")?(self.$element.attr("contenteditable",!0),self.instance=CKEDITOR.inline(self.$element[0],self.options)):self.instance=CKEDITOR.replace(self.$element[0],self.options),self.instance.on("instanceReady",function(){self.readyDeferred.resolve(!0)})}),$scope.$on("$destroy",function(){var instance=CKEDITOR.instances[self.id];instance&&instance.destroy(),self.readyDeferred.promise.then(function(){instance&&instance.destroy()})})}var model=angular.module("rop.module.editor",["material.core"]);model.directive("ropEditor",editorDirective),EditorCtrl.$inject=["$scope","$element","$timeout","$animate","$q"],EditorCtrl.prototype.configureNgModel=function(ngModelCtrl){var self=this;this.ngModelCtrl=ngModelCtrl,self.ready().then(function(){["dataReady","change","blur","saveSnapshot"].forEach(function(event){self.instance.on(event,function(){self.ngModelCtrl.$setViewValue(self.instance.getData()||"")})})}),ngModelCtrl.$render=function(){self.ready().then(function(){self.instance.setData(ngModelCtrl.$viewValue||"",{noSnapshot:!0,callback:function(){self.instance.fire("updateSnapshot")}})})}}}(window.angular);